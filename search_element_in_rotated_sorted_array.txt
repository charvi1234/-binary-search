int searchRotatedSortedArray(int *a, int size, int target)
{
int l,r,mid,pivot,flag=1;
  l=0;
  r=size-1;
  while(l<=r)
  {
    mid=(l+r)/2;
    if(a[l]<=a[r])
    {
      pivot=l;
      break;
    }
    if(a[mid]<=a[mid+1]&&a[mid]<=a[mid-1])
    {
      pivot=mid;
      break;
    }
    else if(a[mid]<=a[r])
      r=mid-1;
    else if(a[mid]>=a[l])
      l=mid+1;
  }
  //printf("%d ",pivot);
  if(target==a[pivot])
  {
    return pivot;
  }
  else
  {
    l=0;r=pivot-1;
    while(l<=r)
    {
      mid=(l+r)/2;
      if(a[mid]==target)
      {
        flag=0;
        return mid;
      }
      else if(a[mid]<target)
      {
        l=mid+1;
      }
      else
        r=mid-1;
    }
    //printf("flag %d",flag);
    if(flag==1)
    {
    l=pivot;
    r=size-1;
    while(l<=r)
    {
      mid=(l+r)/2;
      if(a[mid]==target)
      {
        flag=0;
		return mid;
      }
      else if(a[mid]<target)
      {
        l=mid+1;
      }
      else
        r=mid-1;
    }
    }
  }
  if(flag==1)
    return -1;
}